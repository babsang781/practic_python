- # 각 사용자별 평점 평균 구하기
user_list=[]         # 새로 저장할 배열 생성
for i in range(1, 6041):          # 회원 id 수 만큼 반복 범위 지정
    temp = data[ data[:,0] == i ]          # 각 회원마다 영화 평점 배열을 임시변수에 저장
    user_list.append([i, np.mean(temp[:, 2])])        # id와 평균 평점을 배열형태로 추가

- # 각 사용자별 평균 평점이 4점 이상인 사용자 구하기
user_RatingOver4=[]   # 평균 평점 4점 이상인 회원 모을 리스트 생성
for i in range(0,6040):     # 회원 수만큼 반복
    if user_list[i][1] >=4:      # 4 가 넘는지 검사하고 list에 회원 id 입력
        user_RatingOver4.append(i+1)     # 회원 아이디 1 = 인덱스 0 이라서 +1
--
- <쌤 방식> # 각 사용자별 평균 평점이 4점 이상인 사용자 구하기
user_np = np.array(user_list)        # 유저 평균평점 리스트를 np 배열로 만들어 줌
over4bol = user_np[:, 1]>=4        # bol 데이터 만들어주기
user_np[over4bol, 0].astype('int')        #평균 평점이 4 이상인 사용자의 모든 정보

---

Pandas
1 차원과 2차원만을 다룸
1차원 series, 2차원 dataframe
1차원series은 인덱스와 값

#!pip install pandas  # 판다스 모듈 다운받기
- # Pandas 의 Series 생성
series1 = pd.Series([1,2,3,4,5])    #pd.Series  S 첫 글자 대문자. 함수가 대문자 S 
print(series1)             # 인덱스는 미 지정시 , 0부터 시작하는 정수값 입력
```
0    1
1    2
2    3
3    4
4    5
dtype: int64
```

- population 설정  # 기본값, 인덱스 지정
	population = pd.Series([9904312,3448737,2890451,2466052], index=['서울','부산','인천','대구'])

	# Series 정보 :  값 value, 인덱스 index , 타입dtype  
	print(population.values) #값 확인 
	print(population.index)  #인덱스 확인 
	print(population.dtype) #데이터 타입 확인
	
	# 인덱스 이름 , 컬럼 이름 지정
	population.name = '인구'
	population.index.name = '도시'
> print(population)
```
도시
서울    9904312
부산    3448737
인천    2890451
대구    2466052
Name: 인구, dtype: int64
```


