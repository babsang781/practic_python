- #정렬
	- pn.loc[:,'2010'].sort_values()

<실습 score 자료>
import numpy as np
np.sum(score, axis=0)    # 학급 합계
np.sum(score, axis=0).sort_values(ascending = False)    # 학급 합계, 내림차순 정렬
score.sum(axis=1)    # 과목 합계, 그냥 sum 사용
score['합계'] = np.sum(score.loc[:,:'4반'],axis=1)    # 과목별 합계 컬럼 추가
score['평균'] = np.mean(score.loc[:,:'4반'],axis=1)    #과목별 평균 컬럼 추가 
score.loc['반평균']=  np.mean(score.loc[:'과학',:],axis=0)   # 반별 평균 인덱스 추가하기



- # 가장 큰 / 작은 값 구하기
max_score = score.loc[:'과학',:'4반'].max(axis=1)    # 과목별 가장 큰 값
min_score = score.loc[:'과학',:'4반'].min(axis=1)    # 과목별 가장 작은 값   
max_score-min_score        # 최대-최소 차이 값 출력

data_dic = {'A':[1,3,3,4,4],
            'B':[1,2,2,3,3], 
            'C':[1,2,4,4,5]
           }
df = pd.DataFrame(data_dic)

df1=df.apply(pd.value_counts)
df1 = df1.fillna(1000) #  결측치를 () 안의 값으로 채움, 저장해서 씀

- # 카테고리 데이터 만들기 : cut(데이터, 기준, 라벨)
ages = [0,2,10,21,23,37,31,61,20,41,32,100]
bins= [0,12,25,35,60,99]  # 구분할 기준, 앞 초과 / 뒤 이하 0,15 -> 1~15
labels = ['미성년자','청년','중년','장년','노년']

pd.cut( x=ages, bins= bins, labels=labels)

- ****** concat() 함수 
 result = pd.concat( [df1, df2, df3] )   # 데이터 프레임 합치기, axis =0 :컬럼을 기준으로 합침
pd.concat( [df1,df4], axis =1 )   # axis =1 :인덱스를 기준으로 합침
pd.concat( [df1,df4], axis =1, join = 'inner')  # 같은 인덱스를 가지고 있는 값만 출력
pd.concat( [df1,df4], axis =1, ignore_index = True)    # 인덱스 이름 초기화

- # 데이터를 기준으로 df 를 합침: merge()
# 기준 컬럼에서 공통된 내용만 합병, 공통된 컬럼이 여러개 있으면 지정해주어야함.

pd.merge(df5, df6, on = 'key')     # 기본 속성 how = inner
pd.merge(df5, df6, on = 'key', how="outer")
